name: Release Deployment

on:
  release:
    types: [ published ]

jobs:
  build-release:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [ 14 ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup node env
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}

      - name: Check versions
        run: |
          echo "node $(node -v)"
          cat /etc/os-release

      - name: Get Yarn cache directory
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Cache Yarn dependencies
        uses: actions/cache@v3.0.5
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-yarn-

      - name: Install Yarn dependencies
        run: yarn install --frozen-lockfile

      - name: Run lint
        run: yarn run lint

      - name: Run build
        run: yarn run ng build --sourceMap=true --configuration dashboard

      - name: Get SENTRY_RELEASE
        run: |
          echo "SENTRY_RELEASE=$(node ./scripts/get-sentry-release.js --prod)" >> $GITHUB_ENV

      - name: Sentry Release
        uses: getsentry/action-release@v1
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
        with:
          environment: production
          version: ${{env.SENTRY_RELEASE}}
          sourcemaps: './dist/browser'
